
import { processImage } from './image.js';


// Example usage:
const inputImagePath = '/workspace/test/Form60.jpg';
const outputImagePath = 'output.jpg';
const data = [
    { text: 'Pawan Singh', position: { x: 550, y: 380 } },
    { text: 'Brahmsthan, Sahadatpura, Mau, U.P, 275101', position: { x: 180, y: 410 } },
    { text: '9871', position: { x: 430, y: 546 } },
    { text: "No", position: { x: 890, y: 590 } },
    { text: 'Not Applied', position: { x: 1010, y: 714 } },
    { text: 'Adhaar Card', position: { x: 180, y: 790 } },
    { text: '395894842851', position: { x: 350, y: 790 } },
    { text: "Consent Name", position: { x: 150, y: 930 } },
    { text: "Consent Date", position: { x: 290, y: 1000 } },
    { text: "Consent Month", position: { x: 570, y: 1000 } },
    { text: "Full Date", position: { x: 190, y: 1045 } },
    { text: "Place", position: { x: 190, y: 1090 } },
    { text: "Signature Name", position: { x: 870, y: 1215 } }
    // { text: "Signature", position: { x: 890, y: 1150 } }
  ];
  const image = "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"
  const signature = {
    image:image,
    position: {x: 870 , y:1120},
    size:{width:200, height:50}
  }
processImage(inputImagePath, outputImagePath, data, signature);
